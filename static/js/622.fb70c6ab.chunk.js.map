{"version":3,"file":"static/js/622.fb70c6ab.chunk.js","mappings":"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","sources":["api/moviesAPI.js","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import { PropTypes } from \"prop-types\";\nimport axios from \"axios\";\nconst API_KEY = \"af36a8e543b2cdf1ea4b27ac643d9907\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByName = async (query) => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\ngetTrendMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByName.propTypes = {\n  query: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { FcLeft } from \"react-icons/fc\";\n\nexport const MoviesCard = styled.section``;\nexport const BtnGoBack = styled(NavLink)`\n  padding: 8px 0 0 5px;\n`;\nexport const Icon = styled(FcLeft)``;\nexport const CardImage = styled.img`\n  border-radius: 8px;\n  box-shadow: 3px 3px 5px #696969;\n  margin-bottom: 15px;\n`;\nexport const CardInfo = styled.div``;\nexport const MoviesDetailsInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: space-between;\n  gap: 15px;\n`;\nexport const MoviesDetailsInfoText = styled.p``;\nexport const MoviesDetailsInfoItem = styled.li``;\nexport const MoviesDetailsLink = styled(NavLink)`\n  font-family: \"Raleway\", sans-serif;\n  font-size: 24px;\n  font-weight: 600;\n  color: #006400;\n  transition: color 2000ms cubic-bezier(0, 0.11, 0.35, 2);\n  text-shadow: 1px 1px 1px #6b8e23;\n  &:hover {\n    color: #0000cd;\n    transition: color 2000ms cubic-bezier(0, 0.11, 0.35, 2);\n  }\n`;\n","import { generatePath, useLocation, useParams, Outlet } from \"react-router-dom\";\nimport {\n  MoviesCard,\n  BtnGoBack,\n  MoviesDetailsInfo,\n  CardImage,\n  CardInfo,\n  MoviesDetailsInfoItem,\n  MoviesDetailsLink,\n  MoviesDetailsInfoText,\n  Icon,\n} from \"./MoviesDetails.styled\";\nimport { getMovieById } from \"api/moviesAPI\";\nimport { useEffect, useState, Suspense } from \"react\";\nimport notFoundImage from \"images/noFound/noImage.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const goBack = location?.state?.from ?? \"/\";\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then((movie) => {\n        setMovie(movie);\n      })\n      .catch(() =>\n        toast.error(`Whoops, something went wrong! Please try again later!`)\n      );\n  }, [movieId]);\n\n  if (!movie) return;\n  const {\n    id,\n    poster_path,\n    title,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n  } = movie;\n\n  return (\n    <main>\n      <BtnGoBack to={goBack}>\n        <Icon />\n      </BtnGoBack>\n      <MoviesCard key={id}>\n        <CardImage\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n              : `${notFoundImage}`\n          }\n          alt={title}\n        />\n        <CardInfo>\n          <h2>\n            {title} ({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User scores: {Math.ceil(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres?.map((genre) => genre.name).join(\", \")}</p>\n        </CardInfo>\n      </MoviesCard>\n      <MoviesDetailsInfo>\n        <MoviesDetailsInfoText>Additional information</MoviesDetailsInfoText>\n        <MoviesDetailsInfoItem>\n          <MoviesDetailsLink\n            state={{ from: location?.state?.from }}\n            to={generatePath(\"cast\", { id })}\n          >\n            - Cast\n          </MoviesDetailsLink>\n        </MoviesDetailsInfoItem>\n        <MoviesDetailsInfoItem>\n          <MoviesDetailsLink\n            state={{ from: location?.state?.from }}\n            to={generatePath(\"reviews\", { id })}\n          >\n            - Reviews\n          </MoviesDetailsLink>\n        </MoviesDetailsInfoItem>\n      </MoviesDetailsInfo>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n      <ToastContainer />\n    </main>\n  );\n};\nexport default MoviesDetails;\n"],"names":["API_KEY","axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","propTypes","PropTypes","MoviesCard","styled","BtnGoBack","NavLink","Icon","FcLeft","CardImage","CardInfo","MoviesDetailsInfo","MoviesDetailsInfoText","MoviesDetailsInfoItem","MoviesDetailsLink","movieId","useParams","useState","movie","setMovie","location","useLocation","goBack","state","from","useEffect","then","catch","toast","poster_path","title","overview","release_date","vote_average","genres","to","src","notFoundImage","alt","Date","getFullYear","Math","ceil","map","genre","name","join","generatePath","Suspense"],"sourceRoot":""}