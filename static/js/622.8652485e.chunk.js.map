{"version":3,"file":"static/js/622.8652485e.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import { PropTypes } from \"prop-types\";\nimport axios from \"axios\";\nconst API_KEY = \"af36a8e543b2cdf1ea4b27ac643d9907\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByName = async (query) => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\ngetTrendMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByName.propTypes = {\n  query: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.9;\n`;\n","import { Component } from \"react\";\nimport { ThreeCircles } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\n\nclass Loader extends Component {\n  render() {\n    return (\n      <LoaderContainer>\n        <ThreeCircles\n          height=\"120\"\n          width=\"120\"\n          color=\"#800000\"\n          visible={true}\n          ariaLabel=\"three-circles-rotating\"\n        />\n      </LoaderContainer>\n    );\n  }\n}\nexport default Loader;\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { FcLeft } from \"react-icons/fc\";\n\nexport const MoviesCard = styled.section``;\nexport const BtnGoBack = styled(NavLink)`\n  padding: 8px 0 0 5px;\n`;\nexport const Icon = styled(FcLeft)``;\nexport const CardImage = styled.img`\n  border-radius: 8px;\n  box-shadow: 3px 3px 5px #696969;\n  margin-bottom: 15px;\n`;\nexport const CardInfo = styled.div``;\nexport const MoviesDetailsInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: space-between;\n  gap: 15px;\n`;\nexport const GenresTitle = styled.p`\n  font-style: italic;\n  font-weight: 600;\n`;\nexport const MoviesDetailsInfoText = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  padding: 10px;\n  color: black;\n`;\nexport const MoviesDetailsInfoItem = styled.li``;\nexport const MoviesDetailsLink = styled(NavLink)`\n  font-family: \"Raleway\", sans-serif;\n  font-size: 24px;\n  font-weight: 600;\n  color: #006400;\n  transition: color 2000ms cubic-bezier(0, 0.11, 0.35, 2);\n  text-shadow: 1px 1px 1px #6b8e23;\n  &:hover {\n    color: #0000cd;\n    transition: color 2000ms cubic-bezier(0, 0.11, 0.35, 2);\n  }\n`;\n","import { generatePath, useLocation, useParams, Outlet } from \"react-router-dom\";\nimport {\n  MoviesCard,\n  BtnGoBack,\n  MoviesDetailsInfo,\n  GenresTitle,\n  CardImage,\n  CardInfo,\n  MoviesDetailsInfoItem,\n  MoviesDetailsLink,\n  MoviesDetailsInfoText,\n  Icon,\n} from \"./MoviesDetails.styled\";\nimport { getMovieById } from \"api/moviesAPI\";\nimport Loader from \"components/Loader\";\nimport { useEffect, useState, Suspense } from \"react\";\nimport notFoundImage from \"images/noFound/noImage.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const goBack = location?.state?.from ?? \"/\";\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieById(movieId)\n      .then((movie) => {\n        setMovie(movie);\n        setIsLoading(false);\n      })\n      .catch(() =>\n        toast.error(`Whoops, something went wrong! Please try again later!`)\n      );\n  }, [movieId]);\n\n  if (!movie) return;\n  const {\n    id,\n    poster_path,\n    title,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n  } = movie;\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <BtnGoBack to={goBack}>\n        <Icon />\n      </BtnGoBack>\n      <MoviesCard key={id}>\n        <CardImage\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n              : `${notFoundImage}`\n          }\n          alt={title}\n        />\n        <CardInfo>\n          <h2>\n            {title} ({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User scores: {Math.ceil(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresTitle>\n            {genres?.map((genre) => genre.name).join(\", \")}\n          </GenresTitle>\n        </CardInfo>\n      </MoviesCard>\n      <MoviesDetailsInfo>\n        <MoviesDetailsInfoText>Additional information</MoviesDetailsInfoText>\n        <MoviesDetailsInfoItem>\n          <MoviesDetailsLink\n            state={{ from: location?.state?.from }}\n            to={generatePath(\"cast\", { id })}\n          >\n            - Cast\n          </MoviesDetailsLink>\n        </MoviesDetailsInfoItem>\n        <MoviesDetailsInfoItem>\n          <MoviesDetailsLink\n            state={{ from: location?.state?.from }}\n            to={generatePath(\"reviews\", { id })}\n          >\n            - Reviews\n          </MoviesDetailsLink>\n        </MoviesDetailsInfoItem>\n      </MoviesDetailsInfo>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n      <ToastContainer />\n    </main>\n  );\n};\nexport default MoviesDetails;\n"],"names":["API_KEY","axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","propTypes","PropTypes","LoaderContainer","styled","Loader","height","width","color","visible","ariaLabel","Component","MoviesCard","BtnGoBack","NavLink","Icon","FcLeft","CardImage","CardInfo","MoviesDetailsInfo","GenresTitle","MoviesDetailsInfoText","MoviesDetailsInfoItem","MoviesDetailsLink","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","goBack","state","from","useEffect","then","catch","toast","poster_path","title","overview","release_date","vote_average","genres","to","src","notFoundImage","alt","Date","getFullYear","Math","ceil","map","genre","name","join","generatePath","Suspense"],"sourceRoot":""}