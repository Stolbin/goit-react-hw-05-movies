{"version":3,"file":"static/js/247.1c9042d5.chunk.js","mappings":"4QAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASF,GAGJ,IAAMG,EAAc,mCAAG,sGACLF,EAAAA,EAAAA,IAAA,qCAAwCD,IADnC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAY,mCAAG,WAAOC,GAAP,yFACHL,EAAAA,EAAAA,IAAA,iBACXK,EADW,oBACGN,EADH,oBADG,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAc,mCAAG,WAAOC,GAAP,yFACLP,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCQ,EADnC,+BAErB,CACEC,OAAQ,CACND,MAAAA,KALsB,uBACpBJ,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,sDAY3BD,EAAeO,UAAY,CACzBF,MAAOG,EAAAA,UAAAA,OAAAA,YAGTN,EAAaK,UAAY,CACvBJ,GAAIK,EAAAA,UAAAA,OAAAA,YAGNJ,EAAeG,UAAY,CACzBF,MAAOG,EAAAA,UAAAA,OAAAA,W,0HCcT,UAtCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OATAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAa,GAAD,OAAIO,EAAJ,aACTM,MAAK,YAAe,IAAZH,EAAW,EAAXA,KACPC,EAAQD,EACT,IACAI,OAAM,kBACLC,EAAAA,GAAAA,MAAA,wDADK,GAGV,GAAE,CAACR,KAEF,UAAC,KAAD,YACO,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMM,QAAS,EACdN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,aAA/B,OACP,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IACED,EAAY,0CAC2BA,GAD3B,UAELE,GAETC,IAAKJ,KAEP,UAAC,KAAD,WACGA,EADH,KACWF,EADX,SATaC,EADR,KAgBT,SAAC,KAAD,UAjCN,kEAmCI,SAAC,KAAD,MAGL,C,yLCnDYM,EAAWC,EAAAA,EAAAA,GAAH,2EAMRC,EAAWD,EAAAA,EAAAA,GAAH,wCAIRE,EAAYF,EAAAA,EAAAA,IAAH,iFAMTG,EAAWH,EAAAA,EAAAA,EAAH,gFACN,SAACI,GAAD,OAAWA,EAAMC,MAAMC,UAAUC,EAAjC,IAKFC,EAAUR,EAAAA,EAAAA,EAAH,0DACL,SAACI,GAAD,OAAWA,EAAMC,MAAMC,UAAUG,MAAjC,IACJ,SAACL,GAAD,OAAWA,EAAMC,MAAMK,OAAOC,OAA9B,G","sources":["api/moviesAPI.js","components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx"],"sourcesContent":["import { PropTypes } from \"prop-types\";\nimport axios from \"axios\";\nconst API_KEY = \"af36a8e543b2cdf1ea4b27ac643d9907\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieByName = async (query) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        query,\n      },\n    }\n  );\n  return data;\n};\n\ngetTrendMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByName.propTypes = {\n  query: PropTypes.number.isRequired,\n};\n","import { getMovieById } from \"api/moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport notFoundPhotoProfile from \"images/noFound/noAvatar.png\";\nimport {\n  CastImage,\n  CastItem,\n  CastList,\n  CastName,\n  Message,\n} from \"./Cast.styled\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst anApologyMessage =\n  \"Sorry, but there is currently no information about the cast!\";\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    getMovieById(`${movieId}/credits`)\n      .then(({ cast }) => {\n        setCast(cast);\n      })\n      .catch(() =>\n        toast.error(`Whoops, something went wrong! Please try again later!`)\n      );\n  }, [movieId]);\n  return (\n    <CastList>\n      {cast?.length > 0 ? (\n        cast.map(({ character, credit_id, name, profile_path }) => (\n          <CastItem key={credit_id}>\n            <CastImage\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  : `${notFoundPhotoProfile}`\n              }\n              alt={name}\n            />\n            <CastName>\n              {name} ({character})\n            </CastName>\n          </CastItem>\n        ))\n      ) : (\n        <Message>{anApologyMessage}</Message>\n      )}\n      <ToastContainer />\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  width: 80px;\n`;\n\nexport const CastImage = styled.img`\n  width: 100%;\n  height: 120px;\n  border-radius: 5px;\n`;\n\nexport const CastName = styled.p`\n  font-size: ${(props) => props.theme.fontSizes.xs};\n  margin: 0;\n  text-align: center;\n`;\n\nexport const Message = styled.p`\n  font-size: ${(props) => props.theme.fontSizes.medium};\n  color: ${(props) => props.theme.colors.primary};\n`;\n"],"names":["API_KEY","axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","propTypes","PropTypes","movieId","useParams","useState","cast","setCast","useEffect","then","catch","toast","length","map","character","credit_id","name","profile_path","src","notFoundPhotoProfile","alt","CastList","styled","CastItem","CastImage","CastName","props","theme","fontSizes","xs","Message","medium","colors","primary"],"sourceRoot":""}