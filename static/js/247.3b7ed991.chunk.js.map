{"version":3,"file":"static/js/247.3b7ed991.chunk.js","mappings":"4QAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASF,GAGJ,IAAMG,EAAc,mCAAG,sGACLF,EAAAA,EAAAA,IAAA,qCAAwCD,IADnC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAY,mCAAG,WAAOC,GAAP,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCN,IAD/B,uBAClBI,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAc,mCAAG,WAAOC,GAAP,yFACLP,EAAAA,EAAAA,IAAA,+BAAkCD,GAAW,CAClES,OAAQ,CACND,MAAAA,KAHwB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDAS3BD,EAAeO,UAAY,CACzBF,MAAOG,EAAAA,UAAAA,OAAAA,YAGTN,EAAaK,UAAY,CACvBJ,GAAIK,EAAAA,UAAAA,OAAAA,YAGNJ,EAAeG,UAAY,CACzBF,MAAOG,EAAAA,UAAAA,OAAAA,W,oIC2BT,UA3Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAYA,OAXAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbb,EAAAA,EAAAA,IAAa,GAAD,OAAIO,EAAJ,aACTQ,MAAK,YAAe,IAAZL,EAAW,EAAXA,KACPC,EAAQD,GACRG,GAAa,EACd,IACAG,OAAM,kBACLC,EAAAA,GAAAA,MAAA,wDADK,GAGV,GAAE,CAACV,KAEF,UAAC,KAAD,WACGK,IAAa,SAAC,IAAD,KACT,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,QAAS,EACdR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,aAA/B,OACP,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,IACED,EAAY,0CAC2BA,GAD3B,UAELE,GAETC,IAAKJ,OAGT,SAAC,KAAD,UAAWA,KACX,SAAC,KAAD,UAAiBF,MAZJC,EADR,KAiBT,SAAC,KAAD,UAtCN,kEAwCI,SAAC,KAAD,MAGL,C,6OC3DYM,EAAWC,EAAAA,EAAAA,GAAH,gGAORC,EAAWD,EAAAA,EAAAA,GAAH,yCAIRE,EAAeF,EAAAA,EAAAA,IAAH,8HAQZG,EAAYH,EAAAA,EAAAA,IAAH,8LAWTI,EAAWJ,EAAAA,EAAAA,EAAH,+IAQRK,EAAiBL,EAAAA,EAAAA,EAAH,uHAQdM,EAAUN,EAAAA,EAAAA,EAAH,mG,gIC9CPO,E,QAAkBP,EAAAA,IAAH,6H,SCEtBQ,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAaH,OAbGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACE,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,SAAS,EACTC,UAAU,4BAIjB,OAbGL,CAAeM,EAAAA,WAerB,G","sources":["api/moviesAPI.js","components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import { PropTypes } from \"prop-types\";\nimport axios from \"axios\";\nconst API_KEY = \"af36a8e543b2cdf1ea4b27ac643d9907\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByName = async (query) => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\ngetTrendMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByName.propTypes = {\n  query: PropTypes.number.isRequired,\n};\n","import { getMovieById } from \"api/moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport notFoundPhotoProfile from \"images/noFound/noPhoto.jpg\";\nimport {\n  CardImegeBox,\n  CastImage,\n  CastItem,\n  CastList,\n  CastName,\n  CharactertName,\n  Message,\n} from \"./Cast.styled\";\nimport Loader from \"components/Loader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst anApologyMessage =\n  \"Sorry, but there is currently no information about the cast!\";\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieById(`${movieId}/credits`)\n      .then(({ cast }) => {\n        setCast(cast);\n        setIsLoading(false);\n      })\n      .catch(() =>\n        toast.error(`Whoops, something went wrong! Please try again later!`)\n      );\n  }, [movieId]);\n  return (\n    <CastList>\n      {isLoading && <Loader />}\n      {cast?.length > 0 ? (\n        cast.map(({ character, credit_id, name, profile_path }) => (\n          <CastItem key={credit_id}>\n            <CardImegeBox>\n              <CastImage\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : `${notFoundPhotoProfile}`\n                }\n                alt={name}\n              />\n            </CardImegeBox>\n            <CastName>{name}</CastName>\n            <CharactertName>{character}</CharactertName>\n          </CastItem>\n        ))\n      ) : (\n        <Message>{anApologyMessage}</Message>\n      )}\n      <ToastContainer />\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\n  padding: 20px 0;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  width: 100px;\n`;\n\nexport const CardImegeBox = styled.div`\n  position: relative;\n  border-radius: 5px;\n  background: #fff;\n  width: 100px;\n  height: 150px;\n`;\n\nexport const CastImage = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 3px;\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n`;\n\nexport const CastName = styled.p`\n  padding-top: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #8b0000;\n  margin: 0;\n  text-align: center;\n`;\nexport const CharactertName = styled.p`\n  padding-top: 5px;\n  font-size: 14px;\n  margin: 0;\n  color: black;\n  text-align: center;\n`;\n\nexport const Message = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  padding: 10px;\n  color: black;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.9;\n`;\n","import { Component } from \"react\";\nimport { ThreeCircles } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\n\nclass Loader extends Component {\n  render() {\n    return (\n      <LoaderContainer>\n        <ThreeCircles\n          height=\"120\"\n          width=\"120\"\n          color=\"#800000\"\n          visible={true}\n          ariaLabel=\"three-circles-rotating\"\n        />\n      </LoaderContainer>\n    );\n  }\n}\nexport default Loader;\n"],"names":["API_KEY","axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","propTypes","PropTypes","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","then","catch","toast","length","map","character","credit_id","name","profile_path","src","notFoundPhotoProfile","alt","CastList","styled","CastItem","CardImegeBox","CastImage","CastName","CharactertName","Message","LoaderContainer","Loader","height","width","color","visible","ariaLabel","Component"],"sourceRoot":""}