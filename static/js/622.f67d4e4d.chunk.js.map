{"version":3,"file":"static/js/622.f67d4e4d.chunk.js","mappings":"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","sources":["api/moviesAPI.js","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = \"af36a8e543b2cdf1ea4b27ac643d9907\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(\"trending/movie/day\");\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieByName = async (query) => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MoviesCard = styled.section``;\nexport const BtnGoBack = styled(NavLink)``;\nexport const CardImage = styled.img``;\nexport const CardInfo = styled.div``;\nexport const MoviesDetailsInfo = styled.ul``;\nexport const MoviesDetailsInfoText = styled.p``;\nexport const MoviesDetailsInfoItem = styled.li``;\nexport const MoviesDetailsLink = styled(NavLink)``;\n","import { generatePath, useLocation, useParams, Outlet } from \"react-router-dom\";\nimport {\n  MoviesCard,\n  BtnGoBack,\n  MoviesDetailsInfo,\n  CardImage,\n  CardInfo,\n  MoviesDetailsInfoItem,\n  MoviesDetailsLink,\n  MoviesDetailsInfoText,\n} from \"./MoviesDetails.styled\";\nimport { getMovieById } from \"api/moviesAPI\";\nimport { useEffect, useState, Suspense } from \"react\";\nimport notFoundImage from \"images/noFound/noImage.png\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const { movie, setMovie } = useState({});\n  const location = useLocation();\n  const goBack = location?.state?.from ?? \"/\";\n\n  const {\n    id,\n    poster_path,\n    original_title,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n  } = movie;\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(\n        ({\n          id,\n          poster_path,\n          original_title,\n          overview,\n          release_date,\n          vote_average,\n          genres,\n        }) => {\n          setMovie({\n            id,\n            poster_path,\n            original_title,\n            overview,\n            release_date,\n            vote_average,\n            genres,\n          });\n        }\n      )\n      .catch(() =>\n        toast.error(`Whoops, something went wrong! Please try again later!`)\n      );\n  }, [movieId, setMovie]);\n\n  return (\n    <main>\n      <BtnGoBack to={goBack}>Go back</BtnGoBack>\n      <MoviesCard>\n        <CardImage\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n              : `${notFoundImage}`\n          }\n          alt={original_title}\n        />\n        <CardInfo>\n          <h2>\n            {original_title} ({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User scores: {Math.ceil(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genres?.map((genre) => genre.name).join(\", \")}</p>\n        </CardInfo>\n      </MoviesCard>\n      <MoviesDetailsInfo>\n        <MoviesDetailsInfoText>Additional information</MoviesDetailsInfoText>\n        <MoviesDetailsInfoItem>\n          <MoviesDetailsLink\n            state={{ from: location?.state?.from }}\n            to={generatePath(\"cast\", { id })}\n          >\n            Cast\n          </MoviesDetailsLink>\n        </MoviesDetailsInfoItem>\n        <MoviesDetailsInfoItem>\n          <MoviesDetailsLink\n            state={{ from: location?.state?.from }}\n            to={generatePath(\"reviews\", { id })}\n          >\n            Reviews\n          </MoviesDetailsLink>\n        </MoviesDetailsInfoItem>\n      </MoviesDetailsInfo>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n      <ToastContainer />\n    </main>\n  );\n};\nexport default MoviesDetails;\n"],"names":["axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","MoviesCard","styled","BtnGoBack","NavLink","CardImage","CardInfo","MoviesDetailsInfo","MoviesDetailsInfoText","MoviesDetailsInfoItem","MoviesDetailsLink","movieId","useParams","useState","movie","setMovie","location","useLocation","goBack","state","from","poster_path","original_title","overview","release_date","vote_average","genres","useEffect","then","catch","toast","to","src","notFoundImage","alt","Date","getFullYear","Math","ceil","map","genre","name","join","generatePath","Suspense"],"sourceRoot":""}