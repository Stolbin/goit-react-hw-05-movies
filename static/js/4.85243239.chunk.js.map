{"version":3,"file":"static/js/4.85243239.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { PropTypes } from \"prop-types\";\nimport axios from \"axios\";\nconst API_KEY = \"1c371b02c7ab52709deaac4809871490\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByName = async (query) => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\ngetTrendMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByName.propTypes = {\n  query: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.9;\n`;\n","import { Component } from \"react\";\nimport { LoaderContainer } from \"./Loader.styled\";\nimport { DotSpinner } from \"@uiball/loaders\";\n\nclass Loader extends Component {\n  render() {\n    return (\n      <LoaderContainer>\n        <DotSpinner size={100} speed={0.9} color=\"#D2691E\" />\n      </LoaderContainer>\n    );\n  }\n}\nexport default Loader;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  justify-content: center;\n`;\n\nexport const MoviesCard = styled.div`\n  border: 1px solid: #fff;\n  background-color: #fff;\n  border-radius: 8px;\n  transform: scale(1);\n  box-shadow: 3px 3px 5px #696969;\n\n    transition: transform 450ms cubic-bezier(0, 0.110, 0.35, 2);\n  &:hover {\n    transform: scale(1.02);\n    transition: transform  450ms cubic-bezier(0, 0.110, 0.35, 2);\n  }\n`;\n\nexport const CardImage = styled.img`\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n\nexport const CardNameBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: 12px 4px 4px 4px;\n`;\nexport const CardName = styled.h3`\n  min-height: 40px;\n  color: black;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.2;\n`;\n","import styled from \"@emotion/styled\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  right: 6px;\n  transform: scale(1);\n  transition: transform 450ms cubic-bezier(0, 0.11, 0.35, 2);\n  &:hover {\n    transform: scale(1.1);\n    transition: transform 450ms cubic-bezier(0, 0.11, 0.35, 2);\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 36px;\n  max-width: 600px;\n  background-color: #fff;\n  border: none;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  overflow: hidden;\n  border-radius: 8px;\n  box-shadow: 3px 3px 5px #696969;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  height: 20px;\n  padding: 0px 5px;\n  opacity: 0.4;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding: 4px 10px 4px 10px;\n  border-radius: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from \"react\";\nimport { SearchForm, FormButton, FormInput, Icon } from \"./SearchBar.styled\";\nimport PropTypes from \"prop-types\";\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <FormInput\n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Search movies...\"\n      />\n      <FormButton type=\"submit\">\n        <Icon />\n      </FormButton>\n    </SearchForm>\n  );\n};\n\nSearchBar.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default SearchBar;\n","import { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getMovieByName } from \"api/moviesAPI\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SearchBar from \"components/SearchBar/SearchBar\";\nimport {\n  Container,\n  MoviesCard,\n  CardImage,\n  CardNameBox,\n  CardName,\n} from \"components/MoviesList/MoviesList.styled\";\nimport Loader from \"components/Loader\";\nimport notFoundPoster from \"images/noFound/noImage.png\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get(\"name\") ?? \"\";\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieByName(movieName)\n      .then(({ results }) => {\n        setMovies([...results]);\n        setIsLoading(false);\n      })\n      .catch(() =>\n        toast.error(`Whoops, something went wrong! Please try again later!`)\n      );\n  }, [movieName]);\n\n  const handleFormSubmit = (name) => {\n    const nextParams = name !== \"\" ? { name } : {};\n    setSearchParams(nextParams);\n    setMovies([]);\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleFormSubmit} />\n      {isLoading && <Loader />}\n      <Container>\n        {movies.map(({ id, title, poster_path }) => (\n          <MoviesCard key={id}>\n            <Link state={{ from: location }} to={`${id}`}>\n              <CardImage\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                    : `${notFoundPoster}`\n                }\n                alt={title}\n              />\n              <CardNameBox>\n                <CardName>{title}</CardName>\n              </CardNameBox>\n            </Link>\n          </MoviesCard>\n        ))}\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </Container>\n      <ToastContainer />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","propTypes","PropTypes","LoaderContainer","styled","Loader","DotSpinner","size","speed","color","Component","Container","MoviesCard","CardImage","CardNameBox","CardName","Icon","HiSearch","SearchForm","FormButton","FormInput","onSubmit","useState","setQuery","e","preventDefault","type","value","onChange","currentTarget","placeholder","useSearchParams","searchParams","setSearchParams","movieName","get","movies","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","then","results","catch","toast","name","map","title","poster_path","state","from","to","src","notFoundPoster","alt","Suspense"],"sourceRoot":""}