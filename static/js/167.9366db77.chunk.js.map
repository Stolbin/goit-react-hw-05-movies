{"version":3,"file":"static/js/167.9366db77.chunk.js","mappings":"4QAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASF,GAGJ,IAAMG,EAAc,mCAAG,sGACLF,EAAAA,EAAAA,IAAA,qCAAwCD,IADnC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAY,mCAAG,WAAOC,GAAP,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCN,IAD/B,uBAClBI,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAc,mCAAG,WAAOC,GAAP,yFACLP,EAAAA,EAAAA,IAAA,+BAAkCD,GAAW,CAClES,OAAQ,CACND,MAAAA,KAHwB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDAS3BD,EAAeO,UAAY,CACzBF,MAAOG,EAAAA,UAAAA,OAAAA,YAGTN,EAAaK,UAAY,CACvBJ,GAAIK,EAAAA,UAAAA,OAAAA,YAGNJ,EAAeG,UAAY,CACzBF,MAAOG,EAAAA,UAAAA,OAAAA,W,sHClCIC,E,QAAkBC,EAAAA,IAAH,6H,mBCEtBC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAOH,OAPGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACE,OACE,SAACF,EAAD,WACE,SAACG,EAAA,EAAD,CAAYC,KAAM,IAAKC,MAAO,GAAKC,MAAM,aAG9C,OAPGJ,CAAeK,EAAAA,WASrB,G,yLCXaC,EAAYP,EAAAA,EAAAA,IAAH,uIAOTQ,EAAaR,EAAAA,EAAAA,IAAH,8UAcVS,EAAYT,EAAAA,EAAAA,IAAH,yFAKTU,EAAcV,EAAAA,EAAAA,IAAH,mJAOXW,EAAWX,EAAAA,EAAAA,GAAH,2H,+ICWrB,EAnCmB,SAAC,GAAgB,IAAdY,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGtB,EAAH,EAAGA,GAAIuB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,iBAAY3B,GAA/C,WACE,SAAC,KAAD,CACE4B,IACEJ,EAAW,0CAC4BA,GAD5B,UAEJK,GAETC,IAAKP,KAEP,SAAC,KAAD,WACE,SAAC,KAAD,UAAWA,UAXAvB,EADP,KAmBjB,E,sCChCY+B,E,QAAQxB,EAAAA,GAAH,qGCuBlB,EAnBa,WACX,OAA4ByB,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbtC,EAAAA,EAAAA,MAAiBwC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACvBL,GAAU,OAAIK,IACdH,GAAa,EACd,GACF,GAAE,KAED,6BACE,SAACJ,EAAD,6BACCG,IAAa,SAAC1B,EAAA,EAAD,KACd,SAAC,EAAD,CAAYW,OAAQA,MAGzB,C","sources":["api/moviesAPI.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import { PropTypes } from \"prop-types\";\nimport axios from \"axios\";\nconst API_KEY = \"1c371b02c7ab52709deaac4809871490\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByName = async (query) => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\ngetTrendMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByName.propTypes = {\n  query: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.9;\n`;\n","import { Component } from \"react\";\nimport { LoaderContainer } from \"./Loader.styled\";\nimport { DotSpinner } from \"@uiball/loaders\";\n\nclass Loader extends Component {\n  render() {\n    return (\n      <LoaderContainer>\n        <DotSpinner size={100} speed={0.9} color=\"#D2691E\" />\n      </LoaderContainer>\n    );\n  }\n}\nexport default Loader;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  justify-content: center;\n`;\n\nexport const MoviesCard = styled.div`\n  border: 1px solid: #fff;\n  background-color: #fff;\n  border-radius: 8px;\n  transform: scale(1);\n  box-shadow: 3px 3px 5px #696969;\n\n    transition: transform 450ms linear (0, 0.110, 0.35, 2);\n  &:hover {\n    transform: scale(1.02);\n    transition: transform  450ms linear (0, 0.110, 0.35, 2);\n  }\n`;\n\nexport const CardImage = styled.img`\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n\nexport const CardNameBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: 12px 4px 4px 4px;\n`;\nexport const CardName = styled.h3`\n  min-height: 40px;\n  color: black;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.2;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport {\n  Container,\n  MoviesCard,\n  CardImage,\n  CardNameBox,\n  CardName,\n} from \"./MoviesList.styled\";\nimport notFoundPoster from \"images/noFound/noImage.png\";\nimport PropTypes from \"prop-types\";\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map(({ id, title, poster_path }) => (\n        <MoviesCard key={id}>\n          <Link state={{ from: location }} to={`movies/${id}`}>\n            <CardImage\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                  : `${notFoundPoster}`\n              }\n              alt={title}\n            />\n            <CardNameBox>\n              <CardName>{title}</CardName>\n            </CardNameBox>\n          </Link>\n        </MoviesCard>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n  font-family: \"Alkatra\", cursive;\n  font-size: 40px;\n  font-weight: 600;\n`;\n","import MoviesList from \"components/MoviesList\";\nimport { getTrendMovies } from \"api/moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"components/Loader\";\nimport { Title } from \"./Home.styled\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    getTrendMovies().then(({ results }) => {\n      setMovies([...results]);\n      setIsLoading(false);\n    });\n  }, []);\n  return (\n    <main>\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","propTypes","PropTypes","LoaderContainer","styled","Loader","DotSpinner","size","speed","color","Component","Container","MoviesCard","CardImage","CardNameBox","CardName","movies","location","useLocation","map","title","poster_path","state","from","to","src","notFoundPoster","alt","Title","useState","setMovies","isLoading","setIsLoading","useEffect","then","results"],"sourceRoot":""}